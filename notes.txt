
api-admin-all
24THBCnd33NFyG4pCabDcVmfWpLpgJoAN2m6zVjY39539c46

Header:
Key: env.APP_HEADER_CUSTOM_KEY
Value: env.APP_HEADER_CUSTOM_VALUE

Run Server:
-----------
npm run dev
php artisan serve
composer run dev
php artisan octane:start --watch


Services:
---------
php artisan reverb:start
php artisan queue:listen
php artisan rabbitmq:consume

Debug:
------
php artisan reverb:start --debug
php artisan queue:listen redis --verbose
php artisan queue:listen rabbitmq --verbose
php artisan queue:work --verbose


List Channels:
--------------
php artisan channel:list


Listen Jobs:
------------
php artisan queue:listen rabbitmq
php artisan queue:listen redis


Command:
--------
php artisan app:rabbitmq-producer-command "Testing message"
php artisan app:rabbitmq-consumer-command


Sync Search Engine:
-------------------
php artisan scout:sync-index-settings

Models:
-------
php artisan scout:import "App\Models\Testing"
php artisan scout:import "App\Models\Album"
php artisan scout:import "App\Models\MediaLibrary"


Seeders :
---------
php artisan db:seed --class=TestingSeeder
php artisan db:seed --class=AlbumSeeder
php artisan db:seed --class=MediaLibrarySeeder


Tinker :
---------
php artisan tinker

// Encrypt String
use Illuminate\Support\Facades\Crypt;
$encrypted = Crypt::encryptString('custom');


// New User
{
    "email" : "admin@example.com",
    "password" : "password123",
    "device_name" : "mobile"
}

// New Testing Data
{
    "name" : "Test data",
    "description" : "Description of test",
    "image": "http://127.0.0.1:8000/media/1/image.jpg"
}

// New Album Data
{
    "name" : "Test data",
    "description" : "Description of test",
    "image": "http://127.0.0.1:8000/media/1/image.jpg"
}

// New Media Library Data
{
    "album_id": "01jp4k7vhfwr3ekx4z3k1754kg",
    "image": "http://127.0.0.1:8000/media/1/image.jpg",
    "name": "Test data",
    "intro": "Intro of test",
    "description": "Description of test"
}


Testing:
--------
php artisan migrate --env=testing
php artisan pest:test NewTest ==> prefix (Name)Test
php artisan test --testsuite=Feature --stop-on-failure

Filament:
---------
php artisan make:filament-resource MediaLibrary --soft-deletes --generate



WSL:
---
How to kill ports in Ubuntu
lsof -ti :8899
kill $(lsof -ti :8899)
// Forced
kill -9 $(lsof -ti :8899)
sudo kill -9 $(lsof -ti :8899)


Docker-Compose:
---------------
cd docker-compose/
    LocalStack
    mailpit
    rabbitmq-python
    redis
docker-compose up


TODO:
-----
- RabbitMQ Queue
- Notifications
- Docker Compose(mailhog, redis, rabbitMQ, LocalStack)
- Broadcasting
- Command app
- Broadcasting Channels
- Push Notification
- Octane Server
- ULID with Soft Delete
- Media Library API
- Custom Middleware
- Fillament Resources
